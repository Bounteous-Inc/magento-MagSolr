<types>

	<!-- The StrField type is not analyzed, but indexed/stored verbatim. -->
	<fieldType name="string" class="solr.StrField" sortMissingLast="true"  />

	<!-- boolean: "true" or "false" -->
	<fieldType name="boolean" class="solr.BoolField" sortMissingLast="true" />

	<!-- Binary data type. The data should be sent/retrieved in as Base64 encoded Strings -->
	<fieldtype name="binary" class="solr.BinaryField" />

	<!--
		Numeric field types that index each value at various levels of precision
		to accelerate range queries when the number of values between the range
		endpoints is large.

		Smaller precisionStep values (specified in bits) will lead to more tokens
		indexed per value, slightly larger index size, and faster range queries.
		A precisionStep of 0 disables indexing at different precision levels.
	-->
	<fieldType name="integer" class="solr.TrieIntField"    precisionStep="8" positionIncrementGap="0" omitNorms="true" />
	<fieldType name="float"   class="solr.TrieFloatField"  precisionStep="8" positionIncrementGap="0" omitNorms="true" />
	<fieldType name="long"    class="solr.TrieLongField"   precisionStep="8" positionIncrementGap="0" omitNorms="true" />
	<fieldType name="double"  class="solr.TrieDoubleField" precisionStep="8" positionIncrementGap="0" omitNorms="true" />
	<fieldType name="double4" class="solr.TrieDoubleField" precisionStep="4" positionIncrementGap="0" omitNorms="true" />


	<!--
		The format for this date field is of the form 1995-12-31T23:59:59Z, and
		is a more restricted form of the canonical representation of dateTime
		http://www.w3.org/TR/xmlschema-2/#dateTime
		The trailing "Z" designates UTC time and is mandatory.
		Optional fractional seconds are allowed: 1995-12-31T23:59:59.999Z
		All other components are mandatory.

		Expressions can also be used to denote calculations that should be
		performed relative to "NOW" to determine the value, ie...

			NOW/HOUR
				... Round to the start of the current hour
			NOW-1DAY
				... Exactly 1 day prior to now
			NOW/DAY+6MONTHS+3DAYS
				... 6 months and 3 days in the future from the start of the current day

		Note: For faster range queries, consider the date6 type
	-->
	<fieldType name="date" class="solr.TrieDateField" precisionStep="0" positionIncrementGap="0" />

	<!-- A Trie based date field for faster date range queries and date faceting. -->
	<fieldType name="date6" class="solr.TrieDateField" precisionStep="6" positionIncrementGap="0" />

	<!--
		The "RandomSortField" is not used to store or search any data.
		You can declare fields of this type in your schema to generate
		pseudo-random orderings of your docs for sorting or function
		purposes. The ordering is generated based on the field
		name and the version of the index. As long as the index version
		remains unchanged, and the same field name is reused,
		the ordering of the docs will be consistent.
		If you want different pseudo-random orderings of documents,
		for the same version of the index, use a dynamicField and
		change the field name in the request.
	-->
	<fieldType name="random" class="solr.RandomSortField" indexed="true" />

	<!-- A text field that only splits on whitespace for exact matching of words -->
	<fieldType name="textWhiteSpaceTokenized" class="solr.TextField" positionIncrementGap="100">
		<analyzer>
			<tokenizer class="solr.WhitespaceTokenizerFactory" />

			<filter class="solr.LowerCaseFilterFactory" />
		</analyzer>
	</fieldType>

	<!--
		This is an example of using the KeywordTokenizer along
		With various TokenFilterFactories to produce a sortable field
		that does not include some properties of the source text
	-->
	<fieldType name="alphaOnlySort" class="solr.TextField" sortMissingLast="true" omitNorms="true">
		<analyzer>
			<tokenizer class="solr.KeywordTokenizerFactory"/>

			<filter class="solr.LowerCaseFilterFactory" />
			<filter class="solr.TrimFilterFactory" />
			<filter class="solr.PatternReplaceFilterFactory" pattern="([^a-z])" replacement="" replace="all" />
		</analyzer>
	</fieldType>

	<fieldType name="path" class="solr.TextField" positionIncrementGap="100">
		<analyzer type="index">
			<tokenizer class="solr.PathHierarchyTokenizerFactory" delimiter="/" />
			<filter class="solr.TrimFilterFactory" />
		</analyzer>
	</fieldType>

	<fieldtype name="phonetic" stored="false" indexed="true" class="solr.TextField">
		<analyzer>
			<tokenizer class="solr.StandardTokenizerFactory" />
			<filter class="solr.DoubleMetaphoneFilterFactory" inject="false" />
		</analyzer>
	</fieldtype>

	<!-- lowercases the entire field value, keeping it as a single token.  -->
	<fieldType name="lowercase" class="solr.TextField" positionIncrementGap="100">
		<analyzer>
			<tokenizer class="solr.KeywordTokenizerFactory"/>
			<filter class="solr.LowerCaseFilterFactory" />
		</analyzer>
	</fieldType>

	<!--
		Money/currency field type. See http://wiki.apache.org/solr/MoneyFieldType
		Parameters:
			defaultCurrency: Specifies the default currency if none specified. Defaults to "USD"
			precisionStep:   Specifies the precisionStep for the TrieLong field used for the amount
			providerClass:   Lets you plug in other exchange provider backends:
							 solr.FileExchangeRateProvider is the default and takes one parameter:
								currencyConfig: name of an xml file holding exchange rates
							 solr.OpenExchangeRatesOrgProvider uses rates from openexchangerates.org:
								ratesFileLocation: URL or path to rates JSON file (default latest.json on the web)
								refreshInterval: Number of minutes between each rates fetch (default: 1440, min: 60)
	-->
	<fieldType name="currency" class="solr.CurrencyField" precisionStep="8" defaultCurrency="USD" currencyConfig="currency.xml" />


	<!-- Geo fields -->

	<!--
		This point type indexes the coordinates as separate fields (subFields)

		Example: with subFieldSuffix="_doubleS" the coordinates will be indexed
			in fields myLocation_0_doubleS,myLocation_1_doubleS
	 -->
	<fieldType name="point" class="solr.PointType" dimension="2" subFieldSuffix="_doubleS" />

	<!-- A specialized field for geospatial search. If indexed, this fieldType must not be multivalued. -->
	<fieldType name="location" class="solr.LatLonType" subFieldSuffix="_coordinate" />

	<!--
		An alternative geospatial field type. It supports multiValued and polygon shapes.
		For more information about this see http://wiki.apache.org/solr/SolrAdaptersForLuceneSpatial4
	-->
	<fieldType name="locationRpt" class="solr.SpatialRecursivePrefixTreeFieldType"
	           geo="true" distErrPct="0.025" maxDistErr="0.000009" units="degrees" />



	<!--
		Since fields of this type are by default not stored or indexed, any data added to
		them will be ignored outright
	-->
	<fieldType name="ignored" stored="false" indexed="false" class="solr.StrField" />

</types>