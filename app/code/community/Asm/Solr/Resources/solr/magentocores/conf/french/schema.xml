<?xml version="1.0" encoding="UTF-8" ?>
<!--
	The schema name property is constructed as follows

	Asm_Solr  -  The module name
	x-y-z     -  The module version this schema is meant to work with
	YYYYMMDD  -  The date the schema file was changed the last time

	When changing the schema the name property must be updated, too.
-->
<schema name="Asm_Solr-0-7-0--20140313" version="1.5">

	<!-- include shared types -->
	<xi:include href="../schema_types_shared.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>

	<!-- language specific types -->
	<types>
		<!-- A text field that uses WordDelimiterFilter to enable splitting and matching of
			words on case-change, alpha numeric boundaries, and non-alphanumeric chars,
			so that a query of "wifi" or "wi fi" could match a document containing "Wi-Fi".
			Synonyms and stopwords are customized by external files, and stemming is enabled.
			Duplicate tokens at the same position (which may result from Stemmed Synonyms or
			WordDelim parts) are removed.
			-->
		<fieldType name="text" class="solr.TextField" positionIncrementGap="100">
			<analyzer type="index">
				<tokenizer class="solr.WhitespaceTokenizerFactory"/>
				<filter class="solr.ElisionFilterFactory"/>
				<filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="1" catenateNumbers="1" catenateAll="0" splitOnCaseChange="1" preserveOriginal="1"/>
				<!-- Case insensitive stop word removal.
					add enablePositionIncrements=true in both the index and query
					analyzers to leave a 'gap' for more accurate phrase queries.
				-->
				<filter class="solr.StopFilterFactory"
						ignoreCase="true"
						words="french/stopwords.txt"
						enablePositionIncrements="true"
				/>
				<filter class="solr.SynonymFilterFactory" synonyms="french/synonyms.txt" ignoreCase="true" expand="true"/>
				<filter class="solr.LowerCaseFilterFactory"/>
				<filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
				<filter class="solr.SnowballPorterFilterFactory" language="French" protected="french/protwords.txt"/>
			</analyzer>
			<analyzer type="query">
				<tokenizer class="solr.WhitespaceTokenizerFactory"/>
				<filter class="solr.ElisionFilterFactory"/>
				<filter class="solr.WordDelimiterFilterFactory"
						generateWordParts="1"
						generateNumberParts="1"
						catenateWords="0"
						catenateNumbers="0"
						catenateAll="0"
						splitOnCaseChange="1"
						preserveOriginal="1"
				/>
				<filter class="solr.StopFilterFactory"
						ignoreCase="true"
						words="french/stopwords.txt"
						enablePositionIncrements="true"
				/>
				<!--
								besst practice for synonyms is to add them by expansions during index time

								<filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
				-->
				<filter class="solr.LowerCaseFilterFactory"/>
				<filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
				<filter class="solr.SnowballPorterFilterFactory" language="French" protected="french/protwords.txt"/>
			</analyzer>
		</fieldType>

		<!-- Less flexible matching, but less false matches.	Probably not ideal for product names,
			but may be good for SKUs.	Can insert dashes in the wrong place and still match. -->
		<fieldType name="textTight" class="solr.TextField" positionIncrementGap="100">
			<analyzer>
				<tokenizer class="solr.WhitespaceTokenizerFactory"/>
				<filter class="solr.SynonymFilterFactory" synonyms="french/synonyms.txt" ignoreCase="true" expand="false"/>
				<filter class="solr.StopFilterFactory" ignoreCase="true" words="french/stopwords.txt"/>
				<filter class="solr.ElisionFilterFactory"/>
				<filter class="solr.WordDelimiterFilterFactory"
						generateWordParts="0"
						generateNumberParts="0"
						catenateWords="1"
						catenateNumbers="1"
						catenateAll="0"
						preserveOriginal="1"
				/>
				<filter class="solr.LowerCaseFilterFactory"/>
				<filter class="solr.SnowballPorterFilterFactory" language="French" protected="french/protwords.txt"/>
				<filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
			</analyzer>
		</fieldType>

		<!-- Setup simple analysis for spell checking -->
		<fieldType name="textSpell" class="solr.TextField" positionIncrementGap="100" omitNorms="true">
			<analyzer type="index">
				<tokenizer class="solr.StandardTokenizerFactory"/>

				<filter class="solr.LowerCaseFilterFactory"/>
				<filter class="solr.ElisionFilterFactory"/>
				<filter class="solr.SynonymFilterFactory" synonyms="french/synonyms.txt" ignoreCase="true" expand="true"/>
				<filter class="solr.StopFilterFactory" ignoreCase="true" words="french/stopwords.txt"/>
				<filter class="solr.StandardFilterFactory"/>
				<filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
			</analyzer>
			<analyzer type="query">
				<tokenizer class="solr.StandardTokenizerFactory"/>

				<filter class="solr.LowerCaseFilterFactory"/>
				<filter class="solr.StopFilterFactory" ignoreCase="true" words="french/stopwords.txt"/>
				<filter class="solr.StandardFilterFactory"/>
				<filter class="solr.ElisionFilterFactory"/>
				<filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
			</analyzer>
		</fieldType>

	</types>

	<!-- include shared fields -->
	<xi:include href="../schema_fields_shared.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>

	<!-- unique document identifier -->
	<uniqueKey>id</uniqueKey>

</schema>